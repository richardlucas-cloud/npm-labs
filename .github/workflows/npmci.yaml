name: CI Pipeline

on:
    pull_request:
        branches:
            - main
    workflow_dispatch:

jobs:
    build:
        name: npm builds
        #needs: 
          #- audit
        runs-on: ubuntu-latest
        outputs:
          cache_hit: ${{ steps.set_cache_hit.outputs.cache_hit }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                node-version: 20

            - name: Setup cache
              uses: actions/cache@v4
              id: cache
              with:
                path: frontend/node_modules
                key: ${{ runner.os }}-${{ hashFiles('frontend/package-lock.json') }}

            - name: Set cache hit output
              id: set_cache_hit
              run: echo "cache_hit=${{ steps.cache.outputs.cache-hit }}" >> $GITHUB_ENV

            - name: Install dependencies
              if: steps.cache.outputs.cache-hit != 'true'
              run: cd frontend && npm install

            - name: Compile code
              run: cd frontend && npm run build

            - name: Upload build artifact
              uses: actions/upload-artifact@v4
              with:
                name: npm-build-artifact
                path: frontend/build

    #audit:

      #runs-on: ubuntu-latest

      #steps:
        #- name: Checkout repository
        #  uses: actions/checkout@v4

        #- name: audit check
        #  run: cd frontend &&  npm audit fix --force

        #- name: audit check
        #  run: cd frontend && npm audit --audit-level=moderate

    lint:
        name: npm lint
        needs: build
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                node-version: 20

            - name: Install dependencies
              if: needs.build.outputs.cache_hit != 'true'
              run: cd frontend && npm install

            - name: Run linting
              run: cd frontend && npm run lint

    test:
      needs: build
      runs-on: ubuntu-latest
      steps:
        - name: checkout repository
          uses: actions/checkout@v4

        - name: Setup Node.js
          uses: actions/setup-node@v4
          with:
            node-version: 20

        - name: Install dependencies
          if: needs.build.outputs.cache_hit != 'true'
          run: cd frontend && npm install

        - name: Run unit test
          run: cd frontend && npm run test

    static-analysis:
      needs: build
      name: CodeQL
      runs-on: ubuntu-latest
      permissions:
        security-events: write
        packages: read
        # Only required for workflows in private repositories
        actions: read
        contents: read
      strategy:
        fail-fast: false
        matrix:
          language: [javascript-typescript]

      steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Initialize CodeQL
          uses: github/codeql-action/init@v3
          with:
            languages: ${{ matrix.language }}

        - name: Setup Node.js
          uses: actions/setup-node@v4
          with:
              node-version: 20
  
        - name: Install dependencies
          if: needs.build.outputs.cache_hit != 'true'
          run: cd frontend && npm install
  
        - name: Build frontend
          run: cd frontend && npm run build

        - name: Perform CodeQL Analysis
          uses: github/codeql-action/analyze@v3
          with:
            category: "/language:${{ matrix.language }}"
            
    deploy:
      needs: 
        - build
        - lint
        - test
      uses: ./.github/workflows/npmcd.yaml
      with:
        artifact-name: npm-build-artifact

      
 
    
        
